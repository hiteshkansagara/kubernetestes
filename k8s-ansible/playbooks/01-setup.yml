- name: Prepare Kubernetes cluster nodes
  hosts: all
  become: yes
  tasks:

    - name: Remove i386 architecture
      command: dpkg --remove-architecture i386
      ignore_errors: yes

    - name: Install dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
        update_cache: no

    - name: Disable swap
      command: swapoff -a

    - name: Permanently disable swap in fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#].*swap.*)$'
        replace: '# \1'

    ############################################################
    # üê≥ Docker (Jammy fallback) Repo Setup
    ############################################################
    - name: Remove old Docker repo if present
      file:
        path: /etc/apt/sources.list.d/docker.list
        state: absent

    - name: Remove Docker noble sources from /etc/apt/sources.list
      lineinfile:
        path: /etc/apt/sources.list
        regexp: '^deb .*docker.com.*noble'
        state: absent

    - name: Remove stale docker keyrings
      file:
        path: /usr/share/keyrings/docker.gpg
        state: absent

    - name: Remove invalid Docker noble repository file if it exists
      file:
        path: /etc/apt/sources.list.d/archive_uri-https_download_docker_com_linux_ubuntu-noble.list
        state: absent

    - name: Download and store Docker GPG key (dearmored)
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker.gpg
      args:
        creates: /usr/share/keyrings/docker.gpg

    - name: Add Docker APT repository manually
      copy:
        dest: /etc/apt/sources.list.d/docker.list
        content: |
          deb [arch=amd64 signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu jammy stable
        mode: '0644'

    ############################################################
    # ‚ò∏ Kubernetes Repo Setup
    ############################################################
    - name: Unhold Kubernetes packages if held
      ansible.builtin.shell: |
        apt-mark unhold kubelet kubeadm kubectl
      register: k8s_unhold
      changed_when: "'kubelet' in k8s_unhold.stdout or 'kubeadm' in k8s_unhold.stdout or 'kubectl' in k8s_unhold.stdout"
    
    - name: Reset kubeadm state (ignoring pre-existing errors)
      command: kubeadm reset -f
      ignore_errors: yes

    - name: Remove Kubernetes packages (kubelet, kubeadm, kubectl, CNI)
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
          - kubernetes-cni
          - kube*
        state: absent
        purge: yes
        autoremove: yes

    - name: Remove Kubernetes APT repo file
      file:
        path: /etc/apt/sources.list.d/kubernetes.list
        state: absent

    - name: Clean up Kubernetes state and configuration
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/kubernetes
        - /var/lib/kubelet
        - /var/lib/etcd
        - /etc/cni
        - ~/.kube
    
    - name: Create keyring directory for Kubernetes if not exists
      file:
        path: /usr/share/keyrings
        state: directory
        mode: '0755'

    - name: Add Kubernetes GPG key for v1.30
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key \
          | gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg

    - name: Add Kubernetes apt repo v1.30
      copy:
        dest: /etc/apt/sources.list.d/kubernetes.list
        content: |
          deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] \
            https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /
        mode: '0644'

    ############################################################
    # üßº Update cache and install containerd + Kubernetes
    ############################################################
    - name: Clean apt cache
      shell: apt-get clean && rm -rf /var/lib/apt/lists/*

    - name: Manually update apt cache and capture output
      shell: apt-get update
      register: apt_update
      changed_when: false
      failed_when: "'Err:' in apt_update.stdout or 'NO_PUBKEY' in apt_update.stdout"

    - name: Show apt update output
      debug:
        var: apt_update.stderr_lines

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install containerd and specific Kubernetes components
      vars:
        kubernetes_version: "1.30.1-00"

      apt:
        name:
          - containerd.io
          - "kubelet={{ kubernetes_version }}"
          - "kubeadm={{ kubernetes_version }}"
          - "kubectl={{ kubernetes_version }}"
        state: present
        update_cache: yes
        allow_downgrade: yes

    - name: Hold Kubernetes packages to prevent automatic updates
      shell: apt-mark hold kubelet kubeadm kubectl
      register: hold_output
      changed_when: "'hold' in hold_output.stdout"

#################################################################
- name: Initialize Kubernetes master node
  hosts: master
  become: yes
  tasks:
    - name: Initialize the Kubernetes control-plane
      command: kubeadm init --pod-network-cidr=10.244.0.0/16
      register: kubeadm_init
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Save join command
      copy:
        content: "{{ kubeadm_init.stdout_lines | select('search', 'kubeadm join') | list | join('\n') }}"
        dest: /tmp/kubeadm_join_cmd.sh
        mode: 0755

    - name: Set up kubeconfig for root user
      shell: |
        mkdir -p $HOME/.kube
        cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Install Flannel network plugin
      shell: |
        kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

#################################################################
- name: Join worker nodes to the cluster
  hosts: worker
  become: yes
  tasks:
    - name: Fetch join command from master
      delegate_to: master
      fetch:
        src: /tmp/kubeadm_join_cmd.sh
        dest: /tmp/kubeadm_join_cmd.sh
        flat: yes

    - name: Join node to Kubernetes cluster
      command: "bash /tmp/kubeadm_join_cmd.sh"
      args:
        creates: /etc/kubernetes/kubelet.conf
